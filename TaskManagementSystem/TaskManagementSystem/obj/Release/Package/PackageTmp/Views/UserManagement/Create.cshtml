@model TaskManagementDBLibrary.Model.UserModel

@{
    ViewBag.Title = "Create";
}

<style>
    .form-control {
        width: 25%;
    }
</style>

<h2> Create </h2>

@*@using (Html.BeginForm("Create", "UserManagement", new { enctype = "multipart/form-data" }))
    {*@
<form action="Create" , method="post" enctype="multipart/form-data">

    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-left:10%;margin-right:10%">

        <style>
            .form-control {
                width: 75%;
                /*margin-top:2px;*/
            }

            .form-group .form-control {
                width: 50%;
            }

            .input-group .form-control {
                width: 45%;
            }
        </style>

        <h4><a href="@Url.Action("ManageUser","UserManagement")">Back to List</a></h4>

        <hr />
        @*<div class="row">*@

        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-envelope"></span>
                        </div>
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.registeredTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.registeredTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.registeredTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-phone-alt"></span>
                        </div>
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.genderID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.genderID, new { htmlAttributes = new { @class = "form-control" } })*@

                    @Html.DropDownListFor(model => model.genderID, Model.DropDownGender, "Select a Gender", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.genderID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="col-md-6">


            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-home"></span>
                        </div>
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.levelId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.levelId, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.levelId, Model.DropDownLevels, "Select a Level", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.levelId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.deptID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.deptID, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.deptID, Model.DropDownDepartmenmt, "Select a Department", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.deptID, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.memberStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.memberStatus, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.memberStatus, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isActive)
                        @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.desc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.desc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.desc, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.onlineStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.onlineStatus, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.onlineStatus, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.UserPicture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.UserPicture, new { @class = "form-control", @type = "file", @name = "UserPicture" })
                </div>
            </div>

        </div>

        <div class="form-group" align="center">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <button type="submit" class="btn btn-default" style="margin-right: 450px; width: 200px; height: 40px;"> Create </button>
            </div>
        </div>

        @*</div>*@

    </div>

</form>
@*}*@


